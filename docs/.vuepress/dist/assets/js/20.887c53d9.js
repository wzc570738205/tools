(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{386:function(s,a,e){"use strict";e.r(a);var t=e(45),i=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"插件说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件说明"}},[s._v("#")]),s._v(" 插件说明")]),s._v(" "),e("p",[s._v("为了规范业务对redis的调用，也为了提供便捷的redis方位机制，我们提供redis插件。业务项目仅需引入此插件，无需引入其他redis依赖，即可享用单机或集群Redis使用模式。")]),s._v(" "),e("h2",{attrs:{id:"如何使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[s._v("#")]),s._v(" 如何使用")]),s._v(" "),e("ol",[e("li",[s._v("在pom文件中引入依赖，目前最新版本为：1.0.1-SNAPSHOT")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    <dependency>\n        <groupId>com.ichinae.core.plugins</groupId>\n        <artifactId>ichinae-core-plugins-redis</artifactId>\n        <version>1.0.0</version>\n    </dependency>\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("在Application启动类中导入RedisConfig.class,该配置会自动读取yml配置文件中redis配置属性，完成reids初始化")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    @Import(RedisConfig.class)\n    public class DemoApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    }\n")])])]),e("p",[s._v("注:为了正确初始化redis，yml配置文件中redis配置需参照以下格式进行配置，注意：spring下。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("spring:\n  redis:\n    # Redis数据存储库\n    database: 3\n    # Redis服务器地址\n    host: 127.0.0.1\n    # Redis服务器连接端口\n    port: 6379\n    # Redis服务器连接密码（默认为空）\n    password: 123456\n    # 连接池中最大空闲数，默认是 8 ，如果没有特别要求，可以不配置。\n    maxactive: 20\n    maxwait: 0\n    maxidle: 0\n    minidle: 0\n    \n    # 集群模式\n    maxredirects: 100\n    nodes: 192.168.10.54:6381,192.168.10.54:6382,192.168.10.54:6383,192.168.10.54:6384\n")])])]),e("p",[s._v("使用时在调用的类中注入RedisService即可：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("   @Autowired\n   RedisService redisService;\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("本工具类还提供redis自增序列号获取与任务加锁，在启动类中分别导入对应工具类即可")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    @Import({RedisConfig.class,TaskLockUtils.class,UniqueUtils.class})\n    public class DemoApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    }\n")])])]),e("p",[s._v("使用时在调用的类中注入对应的类即可：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("   @Autowired\n   TaskLockUtils taskLockUtils;\n\n   @Autowired\n   UniqueUtils uniqueUtils;\n")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);